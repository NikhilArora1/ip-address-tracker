{"version":3,"sources":["redux/features/ipInfoSlice.js","components/Search/Search.js","components/Details/Details.js","components/MapRender/MapRender.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["getIPLocation","param","dispatch","fetchInfoStart","fetch","then","response","json","fetchInfoSuccess","ipInfoSlice","createSlice","name","initialState","info","reducers","state","action","payload","actions","fetchInfoFailure","ipformat","domain","email","mapDispatchToProps","getIP","ip","connect","props","useState","input","setInput","useEffect","className","placeholder","onChange","e","target","value","onClick","match","src","process","alt","ipInfo","location","city","region","postalCode","timezone","isp","loc","lat","lng","MapContainer","center","zoom","zoomControl","TileLayer","url","Marker","position","App","style","backgroundImage","backgroundRepeat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","ipInfoReducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.7fe0c598.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n// import { getLocation } from '../../services/services';\n\nconst ipify = 'at_zjiWwGCCbVPhPRR7haXA3yvgVnUfR';\n\nexport function getIPLocation(param) {\n    return function (dispatch) {\n        dispatch(fetchInfoStart());\n        return fetch(`https://geo.ipify.org/api/v1?apiKey=${ipify}&${param}`)\n            .then(response => {\n                // if (!response.ok) {\n                //     throw Error(response.statusText);\n                // }\n                return response.json();\n            })\n            .then(json => {\n                dispatch(fetchInfoSuccess(json))\n            })\n            // .catch(error => dispatch(fetchInfoFailure(error.message)));\n    }\n}\n\n// async function getIP(){\n//     const response = await fetch('http://api.ipify.org/?format=json');\n//     const data = await response.json();\n//     return data;\n// }\n\nexport function getIP(){\n    return function (dispatch) {\n        return fetch(`http://api.ipify.org/?format=json`)\n        .then(response => {\n            return response.json();\n        })\n        .then(json => {\n            const param = `ipAddress=${json.ip}`\n            dispatch(getIPLocation(param))\n        })\n    }\n}\n\n\nconst ipInfoSlice = createSlice({\n    name: 'ipInfo',\n    initialState: {\n        info: {}\n    },\n    reducers: { \n        // fetchInfoFailure: (state, action) => {\n        //     console.log(action);\n        //     state.error = action.payload;\n        // },\n        fetchInfoStart: state => {\n            state.info = {};\n        },\n        fetchInfoSuccess: (state, action) => {\n            state.info = action.payload;\n        }\n    }\n});\n\n\nexport const { fetchInfoStart, fetchInfoFailure, fetchInfoSuccess } = ipInfoSlice.actions;\n\nexport default ipInfoSlice.reducer;","import { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getIPLocation, getIP } from '../../redux/features/ipInfoSlice';\nimport './Search.css';\n\nconst ipformat = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\nconst domain = /^((?:(?:(?:\\w[.\\-+]?)*)\\w)+)((?:(?:(?:\\w[.\\-+]?){0,62})\\w)+)\\.(\\w{2,6})$/;\nconst email = /\\S+@\\S+\\.\\S+/;\n\nconst mapDispatchToProps = { getIPLocation, getIP }\n\nfunction Search(props) {\n    const [input, setInput] = useState('');\n    const { getIP } = props;\n\n    useEffect(() => {\n        getIP();\n    }, [getIP]);\n\n    const handleChange = (e) => {\n        setInput(e.target.value);\n    }\n\n    const handleSubmit = () => {\n        let param;\n        if (input.match(ipformat)) {\n            param = `ipAddress=${input}`;\n        } else if (input.match(domain)) {\n            param = `domain=${input}`;\n        } else if (input.match(email)) {\n            param = `email=${input}`;\n        }\n        props.getIPLocation(param);\n    }\n\n    return (\n        <div className=\"container\">\n            <h2 className=\"header\">IP Address Tracker</h2>\n            <div>\n                <input className=\"search-bar\" placeholder=\"Search for any IP address or domain\" onChange={handleChange} />\n                <button className=\"button\" onClick={handleSubmit}><img src={process.env.PUBLIC_URL + '/icon-arrow.svg'} alt=\"Arrow Icon\" /></button>\n            </div>\n        </div>\n    );\n}\n\n\nexport default connect(null, mapDispatchToProps)(Search);","import { connect } from 'react-redux';\nimport './Details.css';\n\nfunction Details(props) {\n\n    return (\n        <div>\n            {props.info.ip &&\n                <div className=\"details-container\">\n                    <div className=\"details\">\n                        <div className=\"caption\">IP ADDRESS</div>\n                        <div className=\"value\">{props.info.ip}</div>\n                    </div>\n                    <div className=\"divider\"></div>\n                    <div className=\"details\">\n                        <div className=\"caption\">LOCATION</div>\n                        <div className=\"value\">{props.info.location.city}, {props.info.location.region} {props.info.location.postalCode}</div>\n                    </div>\n                    <div className=\"divider\"></div>\n                    <div className=\"details\">\n                        <div className=\"caption\">TIMEZONE</div>\n                        <div className=\"value\">UTC{props.info.location.timezone}</div>\n                    </div>\n                    <div className=\"divider\"></div>\n                    <div className=\"details\">\n                        <div className=\"caption\">ISP</div>\n                        <div className=\"value\">{props.info.isp}</div>\n                    </div>\n                </div>\n            }\n        </div>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return { info: state.ipInfo.info };\n}\n\nexport default connect(mapStateToProps, null)(Details);\n","import './MapRender.css';\nimport { connect } from 'react-redux';\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet';\n\nfunction MapRender(props) {\n    return (\n        <>\n            {props.loc &&\n                <div className=\"map-container\">\n                    <MapContainer\n                        center={props.loc}\n                        zoom={13}\n                        zoomControl={false}>\n                        <TileLayer\n                            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                        />\n                        <Marker position={props.loc}>\n                        </Marker>\n                    </MapContainer>\n                </div>}\n\n        </>\n    );\n}\n\nfunction mapStateToProps(state) {\n    const location = state.ipInfo.info.location;\n    if (location) {\n        return { loc: [location.lat, location.lng] };\n    } else {\n        return {};\n    }\n}\n\nexport default connect(mapStateToProps, null)(MapRender);","import './App.css';\nimport Search from './components/Search/Search';\nimport Details from './components/Details/Details';\nimport MapRender from './components/MapRender/MapRender';\n\nfunction App() {\n  return (\n    <div className=\"app\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/images/pattern-bg.png)`, backgroundRepeat: 'no-repeat' }}>\n      <Search />\n      <Details />\n      <MapRender />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport ipInfoReducer from './features/ipInfoSlice';\n\nexport default configureStore({\n    reducer: {\n        ipInfo: ipInfoReducer\n    }\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}